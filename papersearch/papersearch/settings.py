"""
Django settings for papersearch project.

Generated by 'django-admin startproject' using Django 5.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
from dotenv import load_dotenv
BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(BASE_DIR / '.env')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-i_(r9n_$nb3$@yaowv()-rc%!z-mc+x#1en0&*z^x^uc263=^q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'searchapp',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tailwind',
    'theme',
    'widget_tweaks',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'papersearch.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'papersearch.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'refindr',
        'USER': 'postgres',
        'PASSWORD': '1234',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / "theme/static",
]
STATIC_ROOT = BASE_DIR / "staticfiles"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

TAILWIND_APP_NAME = 'theme'

NPM_BIN_PATH = r"C:\Program Files\nodejs\npm.cmd"

INTERNAL_IPS = [
    "127.0.0.1",
]

# settings.py - Add these to your Django settings

import os
from django.core.exceptions import ImproperlyConfigured

def get_env_variable(var_name, default=''):
    """Get environment variable or return default (empty string)"""
    return os.environ.get(var_name, default)

# Academic API Configuration
ACADEMIC_APIS = {
    'GOOGLE_SCHOLAR': {
        'API_KEY': get_env_variable('GOOGLE_SCHOLAR_API_KEY', ''),
        'SEARCH_ENGINE_ID': get_env_variable('GOOGLE_SCHOLAR_SEARCH_ENGINE_ID', ''),
        'BASE_URL': 'https://www.searchapi.io/api/v1/search',
        'ENABLED': get_env_variable('GOOGLE_SCHOLAR_ENABLED', 'True').lower() == 'true'
    },
    'SPRINGER': {
        'API_KEY': get_env_variable('SPRINGER_API_KEY'),
        'BASE_URL': 'http://api.springernature.com/meta/v2/json',
        'ENABLED': get_env_variable('SPRINGER_ENABLED', 'True').lower() == 'true'
    },
    'PUBMED': {
        'ENABLED' : get_env_variable('PUBMED_ENABLED', 'True').lower() == 'true'
    },
    'ELSEVIER': {
        'API_KEY': get_env_variable('ELSEVIER_API_KEY'),
        'INST_TOKEN': get_env_variable('ELSEVIER_INST_TOKEN', ''),  # Optional institutional token
        'BASE_URL': 'https://api.elsevier.com/content/search/scopus',
        'ENABLED': get_env_variable('ELSEVIER_ENABLED', 'True').lower() == 'true'
    },
    'ARXIV': {
        'BASE_URL': 'http://export.arxiv.org/api/query',
        'ENABLED': get_env_variable('ARXIV_ENABLED', 'True').lower() == 'true'
    }
}

# Rate limiting configuration
API_RATE_LIMITS = {
    'GOOGLE_SCHOLAR': 100,  # requests per day
    'SEMANTIC_SCHOLAR': 1000,  # requests per 5 minutes
    'IEEE_XPLORE': 200,  # requests per day
    'SPRINGER': 5000,  # requests per day
    'ELSEVIER': 20000,  # requests per week
    'ARXIV': float('inf')  # No official limits
}

# Timeout settings
API_TIMEOUTS = {
    'DEFAULT': 10,
    'GOOGLE_SCHOLAR': 15,
    'IEEE_XPLORE': 20,
    'SPRINGER': 15,
    'ELSEVIER': 20
}

# settings.py
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
